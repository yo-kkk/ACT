<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.act.head.product.ProductDAO" >
	
	<!-- 제품 등록 sql -->
   <insert id="productinsert" parameterType="com.project.act.models_dto.ProductDTO">
      insert into product(
             product_name,
      		 product_code,
             price,
             manufact_year,
             manufact_seas,             
             category1,
             category2,
             fit,
             sizes,
             sex,
             color,                          
             head_stock_quantity,
             img_name,
             factory_code
             )             
      values(
             #{product_name},
      		 #{manufact_year}||#{manufact_seas}||'-'||#{sex}||#{category1}||'-'||#{product_name}||'('||#{color}||'-'||#{sizes}||')',
             #{price},
             #{manufact_year},
             #{manufact_seas},               
             #{category1},
             #{category2},
             #{fit},
             #{sizes},
             #{sex},
             #{color},                              
             '0',
             #{manufact_year}||#{manufact_seas}||'-'||#{sex}||#{category1}||'-'||#{product_name}||'('||#{color}||'-'||#{sizes}||').jpg',
             #{factoryDTO.factory_code}
               )               
        <selectKey keyProperty="product_code" order="AFTER" resultType="String" >
			select product_code from product where product_code = #{manufact_year}||#{manufact_seas}||'-'||#{sex}||#{category1}||'-'||#{product_name}||'('||#{color}||'-'||#{sizes}||')'
		</selectKey>
	</insert>	
	
	 <!-- 제품 등록 시 제품 재고에도 정보 등록 sql -->
	<insert id="store_stock_insert">	
		INSERT INTO store_stock(product_code, store_name, quantity)
		select p.product_code, s.store_name, 0
		from product p, stores s
		where p.product_code = #{manufact_year}||#{manufact_seas}||'-'||#{sex}||#{category1}||'-'||#{product_name}||'('||#{color}||'-'||#{sizes}||')'
	</insert>

	 <!-- 상세정보 sql -->
	<select id="getInfo" parameterType="String" resultType="com.project.act.models_dto.ProductDTO">
		SELECT
			  product_code,
			  product_name,
			  manufact_year,
			  manufact_seas,
			  sex,
			  category1,
			  category2,
			  fit,
			  color,
			  sizes,
			  factory_code,
			  reg_date,
			  season_off,
			  head_stock_quantity,
			  img_name,
			  price
		FROM
    		  product
		where product_code=#{product_code}
	</select>

	 <!-- 제품 삭제 sql -->
	<delete id="deleteProduct" parameterType="com.project.act.models_dto.ProductDTO">	
		delete from product
		where product_code=#{product_code}		
<!-- 	
		제품 삭제 시 다른 테이블에 저장된 해당 제품 정보도
		삭제하기 위한 제약조건 수정 (테이블에서 수행해야 함)
		
		<제약조건 삭제>
		alter table store_stock
		drop constraint SYS_C0014097;
		
		<외래키 제약조건 추가>
		alter table store_stock 
		add constraint FK_product_code 
		FOREIGN KEY(product_code) 
		REFERENCES product(product_code)
		ON DELETE CASCADE;
-->		
	</delete>
	
	 <!-- 제품 수정 sql -->
	<update id="editProduct" parameterType="com.project.act.models_dto.ProductDTO">
		update product
		set product_code=#{manufact_year}||#{manufact_seas}||'-'||#{sex}||#{category1}||'-'||#{product_name}||'('||#{color}||'-'||#{sizes}||')',
			product_name=#{product_name}, 
			price=#{price},
			category1=#{category1},
			category2=#{category2},
			fit=#{fit},
			sizes=#{sizes},
			color=#{color},
			sex=#{sex},
			manufact_year=#{manufact_year},
			manufact_seas=#{manufact_seas},
			factory_code=#{factoryDTO.factory_code},
			img_name=#{manufact_year}||#{manufact_seas}||'-'||#{sex}||#{category1}||'-'||#{product_name}||'('||#{color}||'-'||#{sizes}||').jpg'			
		where product_code=#{product_code}
	</update>

	<select id="getProduct_list" parameterType="map" resultType="com.project.act.models_dto.ProductDTO">
		SELECT B.*
		FROM   (SELECT rownum as rnum, A.*	
	        	FROM   (
	        	   	  select p.product_name,
				      		 to_char(p.product_code) AS "product_code",
				             p.price,
				             p.manufact_year,
				             p.manufact_seas,
				             p.reg_date,
				             p.category1,
				             p.category2,
				             p.fit,
				             p.sizes,
				             p.sex,
				             p.color,             
				             p.season_off,
				             p.head_stock_quantity,
				             p.img_name,
				             p.factory_code AS "factoryDTO.factory_code",
				             f.factory_name AS "factoryDTO.factory_name"
				   	  from   product p inner join factory f
				   	  on p.factory_code = f.factory_code
				   	  where  p.product_code like '%'||#{keyword}||'%'  	        		        	
					) A ) B
		WHERE  rnum between #{pageDTO.startNum} and #{pageDTO.endNum} 
	</select>
	
	
	<select id="get_totalCount" parameterType="String" resultType="long">
		select count(*)
		from product
		where product_code like '%'||#{keyword}||'%'
	</select>
	
   
   <select id="productSearch" parameterType="String" resultType="com.project.act.models_dto.ProductDTO">
		select product_code,
	       	   head_stock_quantity
		from   product
		where  product_code like  '%'||#{keyword}||'%'           	  
	</select>

   
   	<select id="getProNFactoryDetail" parameterType="String" resultType="com.project.act.models_dto.ProductDTO">
			select  p.PRODUCT_CODE,
					p.PRODUCT_NAME,
					p.MANUFACT_YEAR,
					p.MANUFACT_SEAS,
					p.SEX,
					p.CATEGORY1,
					p.CATEGORY2,
					p.FIT,
					p.COLOR,
					p.SIZES,
					p.FACTORY_CODE,
					p.REG_DATE,
					p.SEASON_OFF,
					p.HEAD_STOCK_QUANTITY,
					p.IMG_NAME,
					p.PRICE,
					f.FACTORY_CODE AS "factoryDTO.FACTORY_CODE",
					f.FACTORY_NAME AS "factoryDTO.FACTORY_NAME",
					f.SUPERVISOR AS "factoryDTO.SUPERVISOR",
					f.ADDRESS AS "factoryDTO.ADDRESS",
					f.PHONE AS "factoryDTO.PHONE"
		from product p inner join factory f
		on p.FACTORY_CODE = f.FACTORY_CODE
		where p.product_code = #{product_code}	
	</select>
     
    	
	<insert id="head_order_basic" parameterType="com.project.act.models_dto.Head_orderDTO">	
		insert into HEAD_ORDER(HEAD_ORDER_CODE,
							PRODUCT_CODE,
							QUANTITY,
							FACTORY_CODE,
							ORDER_DATE,
							EMP_ID)
		values(seq_head_order.nextval,
			  #{productDTO.product_code},		 
			  #{quantity},
			  #{factoryDTO.factory_code},
			  #{order_date},
			  #{empDTO.emp_id}
			 )
		<selectKey keyProperty="head_order_code" order="AFTER" resultType="long" >
			select seq_head_order.currval from dual
		</selectKey>	
	</insert>

	
	<insert id="head_order_plus" parameterType="map">
		insert into HEAD_ORDER(head_order_code,
								PRODUCT_CODE,
								QUANTITY,
								FACTORY_CODE,
								ORDER_DATE,
								EMP_ID
								)
			values( #{head_order_code},
				   #{PRODUCT_CODE},		 
				   #{QUANTITY},
				   #{FACTORY_CODE},
				   #{order_date},
				   #{emp_id}
				   )
	</insert>
	
	<insert id="headOrder_single" parameterType="com.project.act.models_dto.Head_orderDTO">	
		insert into HEAD_ORDER(HEAD_ORDER_CODE,
							PRODUCT_CODE,
							QUANTITY,
							FACTORY_CODE,
							ORDER_DATE,
							EMP_ID)
		values(seq_head_order.nextval,
			  #{productDTO.product_code},		 
			  #{quantity},
			  #{factoryDTO.factory_code},
			  #{order_date},
			  #{empDTO.emp_id}
			 )	
	</insert>
	
	<select id="getProNFactoryDetailFromStore" parameterType="map" resultType="com.project.act.models_dto.ProductDTO">
				select a.PRODUCT_CODE,
							a.PRODUCT_NAME,
							a.MANUFACT_YEAR,
							a.MANUFACT_SEAS,
							a.SEX,
							a.CATEGORY1,
							a.CATEGORY2,
							a.FIT,
							a.COLOR,
							a.SIZES,
							a.FACTORY_CODE,
							a.REG_DATE,
							a.SEASON_OFF,
							s.QUANTITY AS "head_stock_quantity",
							a.IMG_NAME,
							a.PRICE,
							f.FACTORY_CODE AS "factoryDTO.FACTORY_CODE",
							f.FACTORY_NAME AS "factoryDTO.FACTORY_NAME",
							f.SUPERVISOR AS "factoryDTO.SUPERVISOR",
							f.ADDRESS AS "factoryDTO.ADDRESS",
							f.PHONE AS "factoryDTO.PHONE"
		from (select *
		        from product
		        where product_code = #{product_code}) a inner join factory f
		on a.FACTORY_CODE = f.FACTORY_CODE
		        inner join store_stock s
		on a.product_code = s.product_code
		where s.store_name =#{store_name}
	</select>
	
</mapper>
