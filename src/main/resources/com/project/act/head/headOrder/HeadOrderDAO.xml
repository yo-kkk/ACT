<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.act.head.headOrder.HeadOrderDAO" >
	<select id="getToFactoryOrderList" parameterType="map" resultType="com.project.act.models_dto.Head_orderDTO">
		 	SELECT B.head_order_code,
                    B.ORDER_DATE,
                     B.PRODUCT_CODE AS "productDTO.product_code",
                     B.QUANTITY,
                       B.FACTORY_CODE AS "factoryDTO.factory_code",
                       B.FACTORY_NAME AS "factoryDTO.factory_name",
                       B.RECEIVE_YN AS "receive_yn",
                       B.emp_id AS "empDTO.emp_id",
                       B.name AS "empDTO.name"
			FROM   (SELECT rownum as rnum, A.*	      	
		                   FROM  (SELECT   h.head_order_code,
			                                 h.ORDER_DATE,
			                                 h.PRODUCT_CODE,
			                                 h.QUANTITY,
			                                 f.FACTORY_CODE,
			                                 f.FACTORY_NAME,
			                                 h.RECEIVE_YN,
			                                 h.emp_id,
			                                 e.name
				                    FROM (SELECT  *
				                             FROM head_order
				                             WHERE PRODUCT_CODE  like  '%'||#{keyword}||'%') h  inner join factory f
				                       ON h.FACTORY_CODE = f.FACTORY_CODE
				                                       inner join employee e
				                       ON h.emp_id = e.emp_id  ) A ) B
			WHERE  rnum between  #{pageDTO.startNum} and #{pageDTO.endNum}
			ORDER BY head_order_code DESC
	</select>
	
	<select id="getFromStoreOrderList" resultType="com.project.act.models_dto.Store_orderDTO">
		SELECT  s.STORE_ORDER_CODE,
				s.ORDER_DATE,
	            s.PRODUCT_CODE AS "productDTO.product_code",
	            s.STORE_NAME AS "storeDTO.store_name",
				s.QUANTITY,
	            s.ORDER_DATE,
				s.RECEIVE_YN,
	            s.EMP_ID AS "empDTO.emp_id",
	            e.name AS "empDTO.name"
			FROM store_order s inner join employee e
	        on s.emp_id = e.emp_id		
	</select>
	
	<select id="getSearchTotalCnt" parameterType="map" resultType="long">		
		        SELECT count(*)
	     FROM (SELECT  head_order_code,
                       ORDER_DATE,
                       PRODUCT_CODE,
                       QUANTITY,
                       RECEIVE_YN,
                       emp_id,
                       FACTORY_CODE
	           FROM head_order
	          WHERE PRODUCT_CODE  like  '%'||#{keyword}||'%') h  inner join factory f
	             ON h.FACTORY_CODE = f.FACTORY_CODE
	                        inner join employee e
	             ON h.emp_id = e.emp_id
	</select>
	
	<delete id="deleteToFactoryOrder" parameterType="com.project.act.models_dto.Head_orderDTO">
			 DELETE FROM head_order 
			 WHERE head_order_code = #{head_order_code}	
			 AND product_code = #{productDTO.product_code}
	</delete>
	
	<update id="updateReceive" parameterType="com.project.act.models_dto.Head_orderDTO" >
		update head_order set receive_yn = #{receive_yn} 
		WHERE head_order_code = #{head_order_code}
		AND product_code = #{productDTO.product_code}
	</update>
	
	<update id="updateSendYN" parameterType="com.project.act.models_dto.Store_orderDTO" >
		update store_order set send_yn = #{send_yn} 
		WHERE store_order_code = #{store_order_code}
		AND product_code = #{productDTO.product_code}
	</update>
	
	<update id="updateHeadStock" parameterType="com.project.act.models_dto.Store_orderDTO" >
		update product
		 <choose>												
		    <when test='send_yn == "n"'>
				set HEAD_STOCK_QUANTITY = HEAD_STOCK_QUANTITY + #{quantity} 
		    </when>
		    <otherwise>
				set HEAD_STOCK_QUANTITY = HEAD_STOCK_QUANTITY - #{quantity} 
		    </otherwise>
	  	 </choose> 		
		where product_code = #{productDTO.product_code}
	</update>
	
	<update id="updateHeadStockbyfac" parameterType="com.project.act.models_dto.Head_orderDTO" >
		update product
		 <choose>												
		    <when test='receive_yn == "n"'>
				set HEAD_STOCK_QUANTITY = HEAD_STOCK_QUANTITY - #{quantity} 
		    </when>
		    <otherwise>
				set HEAD_STOCK_QUANTITY = HEAD_STOCK_QUANTITY + #{quantity} 
		    </otherwise>
	  	 </choose> 		
		where product_code = #{productDTO.product_code}
	</update>
</mapper>